version: '3'

services:

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  errordashboard:
   build:
    context: ./
    dockerfile: ./Dockerfile.ErrorDashboard
   restart: unless-stopped
   ports:
    - "86:80"
   depends_on:
    - rabbitmq
  
  shipping:
   build:
    context: ./
    dockerfile: ./Dockerfile.Shipping
   restart: unless-stopped
   ports:
    - "85:80"
   depends_on:
    - rabbitmq

  accounting:
    build:
     context: ./
     dockerfile: ./Dockerfile.Accounting
    restart: unless-stopped
    ports:
      - "84:80"
    depends_on:
      - rabbitmq

  contact:
    build:
     context: ./
     dockerfile: ./Dockerfile.Contact
    restart: unless-stopped
    ports:
      - "83:80"
    depends_on:
      - rabbitmq

  marketing:
    build:
     context: ./
     dockerfile: ./Dockerfile.Marketing
    restart: unless-stopped
    ports:
      - "82:80"
    depends_on:
      - rabbitmq

  sales:
    build:
     context: ./
     dockerfile: ./Dockerfile.Sales
    restart: unless-stopped
    ports:
      - "81:80"
    depends_on:
      - rabbitmq

  warehouse:
    build:
     context: ./
     dockerfile: ./Dockerfile.Warehouse
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - rabbitmq

  apigateway:
    build:
     context: ./
     dockerfile: ./Dockerfile.ApiGateway
    restart: always
    ports:
      - "8080:80"

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
   restart: always
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node

  kibana:
   image: docker.elastic.co/kibana/kibana:7.16.1
   restart: always
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://localhost:9200

volumes:
  elasticsearch-data:
